{"version":3,"sources":["navbar/Navbar.js","package/Package.js","packages/Packages.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","title","react_fontawesome_index_es","icon","Component","Package","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onRemove","bind","assertThisInitialized","name","value","package","window","confirm","concat","type","onClick","target","rel","downloads","toLocaleString","Packages","state","period","packages","data","onClear","onInputChange","onPackageAdd","onPackageRemove","onPeriodChange","_this2","getCache","setState","load","event","_this3","preventDefault","toConsumableArray","includes","alert","push","setCache","_this4","index","findIndex","item","splice","_this5","localStorage","removeItem","getItem","JSON","parse","setItem","stringify","_this6","length","names","join","axios","get","then","res","transform","sort","b","keys","filter","key","map","_this7","hasPackages","Fragment","onSubmit","placeholder","onChange","periodCss","Package_Package","evt","size","library","add","faCog","faSadCry","faGithub","faPlus","faTrashAlt","App","Navbar_Navbar","Packages_Packages","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c1074bad.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n  /**\r\n   * Render.\r\n   */\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <span className=\"navbar-brand mb-0 h1\">NPM Dashboard</span>\r\n        <ul className=\"navbar-nav d-flex flex-row ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link px-2\" href=\"https://github.com/justinlettau/npm-dashboard\" title=\"GitHub\">\r\n              <FontAwesomeIcon icon={['fab', 'github']} />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Package extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.onRemove = this.onRemove.bind(this);\r\n  }\r\n\r\n  /**\r\n   * On remove.\r\n   */\r\n  onRemove() {\r\n    const name = this.props.value.package;\r\n\r\n    if (window.confirm(`Are you sure you want to remove ${name}?`)) {\r\n      this.props.onRemove(name);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <button type=\"button\" onClick={this.onRemove} className=\"close\">&times;</button>\r\n          <h5 className=\"card-title\">\r\n            <a href={'https://www.npmjs.com/package/' + this.props.value.package} className=\"text-body\" target=\"_blank\" rel=\"noopener noreferrer\">{this.props.value.package}</a>\r\n          </h5>\r\n          <div className=\"text-center\">\r\n            <span className=\"display-4 text-success\">{this.props.value.downloads.toLocaleString()}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nimport Package from '../package/Package';\r\n\r\nexport default class Packages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: '',\r\n      period: 'last-week',\r\n      packages: [],\r\n      data: []\r\n    };\r\n\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onPackageAdd = this.onPackageAdd.bind(this);\r\n    this.onPackageRemove = this.onPackageRemove.bind(this);\r\n    this.onPeriodChange = this.onPeriodChange.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Component did mount.\r\n   */\r\n  componentDidMount() {\r\n    const packages = this.getCache();\r\n    this.setState({ packages }, () => this.load());\r\n  }\r\n\r\n  /**\r\n   * On input add.\r\n   *\r\n   * @param {SyntheticEvent} event Event object.\r\n   */\r\n  onInputChange(event) {\r\n    const value = event.target.value;\r\n    this.setState({ value });\r\n  }\r\n\r\n  /**\r\n   * On package add.\r\n   *\r\n   * @param {SyntheticEvent} event Event object.\r\n   */\r\n  onPackageAdd(event) {\r\n    event.preventDefault();\r\n\r\n    const name = this.state.value;\r\n    const packages = [...this.state.packages];\r\n\r\n    if (packages.includes(name)) {\r\n      alert(`It looks like ${name} is already listed below.`);\r\n      return;\r\n    }\r\n\r\n    packages.push(name);\r\n    this.setCache(packages);\r\n    this.setState({ value: '', packages }, () => this.load());\r\n  }\r\n\r\n  /**\r\n   * On package remove.\r\n   *\r\n   * @param {string} name Package name to remove.\r\n   */\r\n  onPackageRemove(name) {\r\n    const index = this.state.packages.findIndex(item => item === name);\r\n\r\n    if (index !== -1) {\r\n      const packages = [...this.state.packages];\r\n\r\n      packages.splice(index, 1);\r\n      this.setCache(packages);\r\n      this.setState({ packages }, () => this.load());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On period change.\r\n   *\r\n   * @param {string} period Period to set.\r\n   */\r\n  onPeriodChange(period) {\r\n    this.setState({ period }, () => this.load());\r\n  }\r\n\r\n  /**\r\n   * Remove all packages and cache.\r\n   */\r\n  onClear() {\r\n    if (window.confirm('Are you sure you want to remove all packages?')) {\r\n      this.setState({ packages: [], data: [] });\r\n      localStorage.removeItem('npm-dashboard:packages');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get packages from storage.\r\n   */\r\n  getCache() {\r\n    const value = localStorage.getItem('npm-dashboard:packages');\r\n    return JSON.parse(value) || [];\r\n  }\r\n\r\n  /**\r\n   * Set packages to storage.\r\n   *\r\n   * @param {string[]} packages Package names to set.\r\n   */\r\n  setCache(packages) {\r\n    localStorage.setItem('npm-dashboard:packages', JSON.stringify(packages));\r\n  }\r\n\r\n  /**\r\n   * Load package data.\r\n   */\r\n  load() {\r\n    if (!this.state.packages.length) {\r\n      return;\r\n    }\r\n\r\n    const period = this.state.period;\r\n    const names = this.state.packages.join();\r\n\r\n    axios.get(`https://api.npmjs.org/downloads/point/${period}/${names}`)\r\n      .then(res => this.transform(res.data))\r\n      .then(data => data.sort((a, b) => b.downloads - a.downloads))\r\n      .then(data => this.setState({ data }));\r\n  }\r\n\r\n  /**\r\n   * Transform API request data into array of objects.\r\n   *\r\n   * @param {object} data Data returned from API request.\r\n   */\r\n  transform(data) {\r\n    if ('package' in data && 'downloads' in data) {\r\n      return [data];\r\n    }\r\n\r\n    return Object.keys(data)\r\n      .filter(key => !!data[key])\r\n      .map(key => data[key]);\r\n  }\r\n\r\n  /**\r\n   * Get active class for period.\r\n   *\r\n   * @param {string} period Period to compare.\r\n   */\r\n  periodCss(period) {\r\n    return this.state.period === period ? ' active' : '';\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   */\r\n  render() {\r\n    const hasPackages = this.state.data.length;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-flex mb-4\">\r\n          <form onSubmit={this.onPackageAdd} className=\"flex-fill mr-2\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter package name ...\" value={this.state.value} onChange={this.onInputChange} />\r\n          </form>\r\n          <div className=\"btn-group\">\r\n            <button type=\"button\" className={'btn btn-secondary ' + this.periodCss('last-week')} onClick={() => this.onPeriodChange('last-week')}>\r\n              Last Week\r\n            </button>\r\n            <button type=\"button\" className={'btn btn-secondary ' + this.periodCss('last-month')} onClick={() => this.onPeriodChange('last-month')}>\r\n              Last Month\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {!!hasPackages &&\r\n          <React.Fragment>\r\n            <div className=\"row\">\r\n              {this.state.data.map(item =>\r\n                <div className=\"col-4 mb-2\" key={item.package}>\r\n                  <Package value={item} onRemove={(evt) => this.onPackageRemove(item.package, evt)} />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"text-center mt-5\">\r\n              <button type=\"button\" className=\"btn btn-link\" onClick={this.onClear}>Remove All</button>\r\n            </div>\r\n          </React.Fragment>\r\n        }\r\n        {!hasPackages &&\r\n          <div className=\"text-center mt-5\">\r\n            <FontAwesomeIcon icon={['far', 'sad-cry']} size=\"6x\" />\r\n            <p>No packages found.</p>\r\n          </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faSadCry } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCog, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { Component } from 'react';\r\n\r\nimport Navbar from './navbar/Navbar';\r\nimport Packages from './packages/Packages';\r\n\r\nlibrary.add(\r\n  faCog,\r\n  faSadCry,\r\n  faGithub,\r\n  faPlus,\r\n  faTrashAlt\r\n);\r\n\r\nexport default class App extends Component {\r\n\r\n  /**\r\n   * Render.\r\n   */\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar />\r\n        <div className=\"container my-4\">\r\n          <Packages />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable */\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404\r\n        || response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}